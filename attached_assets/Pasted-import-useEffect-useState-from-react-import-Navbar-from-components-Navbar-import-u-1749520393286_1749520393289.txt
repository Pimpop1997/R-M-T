import { useEffect, useState } from "react";
import Navbar from "../components/Navbar";
import { useAuthStore } from "../contexts/AuthContext";

// Mock fetch
const mockPosts = [
  {
    id: 1,
    user: { name: "‡∏™‡∏°‡∏ä‡∏≤‡∏¢", profileImage: "/default-avatar.png" },
    content: "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏°‡∏≤‡∏Å‡πÜ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ô‡∏µ‡πâ!",
    createdAt: "2025-06-10 08:00",
  },
  {
    id: 2,
    user: { name: "‡∏≠‡∏≤‡∏£‡∏¢‡∏≤", profileImage: "/default-avatar.png" },
    content: "‡∏≠‡∏¢‡∏≤‡∏Å‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ô‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏Ñ‡πà‡∏∞ üíö",
    createdAt: "2025-06-09 20:05",
  },
];

export default function Feed() {
  const { user } = useAuthStore();
  const [posts, setPosts] = useState(mockPosts);
  const [content, setContent] = useState("");
  const [error, setError] = useState("");

  // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ useEffect ‡πÉ‡∏´‡πâ fetch ‡∏à‡∏≤‡∏Å API ‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï

  const handleCreatePost = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!content) {
      setError("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì");
      return;
    }
    setError("");
    // ‡∏™‡πà‡∏á‡πÑ‡∏õ API ‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á
    setPosts([
      {
        id: Date.now(),
        user,
        content,
        createdAt: new Date().toLocaleString("th-TH"),
      },
      ...posts,
    ]);
    setContent("");
  };

  return (
    <>
      <Navbar />
      <div className="flex flex-col items-center min-h-screen bg-[#101214] pt-8">
        <div className="w-full max-w-2xl bg-[#181c1f] rounded-2xl shadow-2xl p-6 border border-green-400/30 text-green-300">
          {/* Welcome Bar */}
          <div className="flex items-center justify-between mb-4">
            <h1 className="text-xl font-bold text-green-400">Feed ‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏•‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï</h1>
            {user && (
              <div className="flex items-center space-x-2">
                <img src={user.profileImage || '/default-avatar.png'} alt="Avatar" className="w-8 h-8 rounded-full" />
                <span>{user.name}</span>
              </div>
            )}
          </div>
          {/* Create Post */}
          <form onSubmit={handleCreatePost} className="mb-6">
            <textarea
              className="w-full rounded-md p-2 bg-[#23272b] text-green-100 border border-green-400/20 focus:outline-none focus:border-green-400"
              placeholder="‡πÅ‡∏ä‡∏£‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì..."
              value={content}
              onChange={e => setContent(e.target.value)}
              rows={3}
              maxLength={300}
            />
            {error && <div className="text-red-400 mt-1">{error}</div>}
            <div className="flex justify-end mt-2">
              <button
                className="bg-green-700 text-black rounded-lg px-5 py-2 font-bold shadow hover:bg-green-600 transition"
                type="submit"
              >
                ‡πÇ‡∏û‡∏™‡∏ï‡πå
              </button>
            </div>
          </form>
          {/* Feed */}
          <div>
            {posts.map((post) => (
              <div key={post.id} className="bg-[#23272b] rounded-xl shadow p-4 mb-4">
                <div className="flex items-center gap-2 mb-1">
                  <img src={post.user.profileImage} className="w-8 h-8 rounded-full" alt="avatar" />
                  <span className="font-bold">{post.user.name}</span>
                  <span className="text-xs text-green-200 ml-auto">{post.createdAt}</span>
                </div>
                <div className="text-green-200">{post.content}</div>
                {/* Like/Comment Buttons */}
                <div className="flex gap-4 mt-2">
                  <button className="text-green-400 hover:underline">üëç ‡πÑ‡∏•‡∏Ñ‡πå</button>
                  <button className="text-green-400 hover:underline">üí¨ ‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå</button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
      <footer className="text-center p-4 bg-[#101214] text-green-200">
        Feed ‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏•‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï - ‡∏£‡∏ß‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡πÉ‡∏ô‡∏™‡∏±‡∏á‡∏Ñ‡∏°
      </footer>
    </>
  );
}
